"use strict";(self.webpackChunkhydra_head_protocol_docs=self.webpackChunkhydra_head_protocol_docs||[]).push([[2960],{88461:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>o,frontMatter:()=>r,metadata:()=>i,toc:()=>t});const i=JSON.parse('{"id":"tests/hydra-node/hspec-results","title":"Test results for hydra-node","description":"Hydra.Utils","source":"@site/benchmarks/tests/hydra-node/hspec-results.md","sourceDirName":"tests/hydra-node","slug":"/tests/hydra-node/hspec-results","permalink":"/head-protocol/unstable/benchmarks/tests/hydra-node/hspec-results","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"Test results for hydra-cluster","permalink":"/head-protocol/unstable/benchmarks/tests/hydra-cluster/hspec-results"},"next":{"title":"Test results for hydra-plutus","permalink":"/head-protocol/unstable/benchmarks/tests/hydra-plutus/hspec-results"}}');var l=s(74848),d=s(28453);const r={},c="Test results for hydra-node",a={},t=[{value:"Hydra.Utils",id:"hydrautils",level:2},{value:"Hydra.Persistence",id:"hydrapersistence",level:2},{value:"PersistenceIncremental",id:"persistenceincremental",level:3},{value:"Persistence",id:"persistence",level:3},{value:"Hydra.Party",id:"hydraparty",level:2},{value:"Ord",id:"ord",level:3},{value:"JSON encoding of Party",id:"json-encoding-of-party",level:3},{value:"Hydra.Options",id:"hydraoptions",level:2},{value:"Hydra Node RunOptions",id:"hydra-node-runoptions",level:3},{value:"JSON encoding of RunOptions",id:"json-encoding-of-runoptions",level:4},{value:"gen-hydra-keys sub-command",id:"gen-hydra-keys-sub-command",level:4},{value:"offline sub-command",id:"offline-sub-command",level:4},{value:"publish-scripts sub-command",id:"publish-scripts-sub-command",level:4},{value:"Hydra.Node.Run",id:"hydranoderun",level:2},{value:"Hydra.Node.InputQueue",id:"hydranodeinputqueue",level:2},{value:"Hydra.Node",id:"hydranode",level:2},{value:"checkHeadState",id:"checkheadstate",level:3},{value:"stepHydraNode",id:"stephydranode",level:3},{value:"hydrate",id:"hydrate",level:3},{value:"Hydra.Network.Reliability",id:"hydranetworkreliability",level:2},{value:"sending messages",id:"sending-messages",level:3},{value:"receiving messages",id:"receiving-messages",level:3},{value:"Hydra.Network.Heartbeat",id:"hydranetworkheartbeat",level:2},{value:"Hydra.Network.Authenticate",id:"hydranetworkauthenticate",level:2},{value:"Serialization",id:"serialization",level:3},{value:"JSON encoding of AuthLog",id:"json-encoding-of-authlog",level:4},{value:"Hydra.Network",id:"hydranetwork",level:2},{value:"configureMessagePersistence",id:"configuremessagepersistence",level:3},{value:"Serialisation",id:"serialisation",level:3},{value:"JSON encoding of (Message SimpleTx)",id:"json-encoding-of-message-simpletx",level:4},{value:"Ouroboros Network",id:"ouroboros-network",level:3},{value:"Hydra.Model.MockChain",id:"hydramodelmockchain",level:2},{value:"Hydra.Model",id:"hydramodel",level:2},{value:"Hydra.Logging.Monitoring",id:"hydraloggingmonitoring",level:2},{value:"Hydra.Logging",id:"hydralogging",level:2},{value:"Hydra.Ledger.Simple",id:"hydraledgersimple",level:2},{value:"Hydra.Ledger.Cardano.Time",id:"hydraledgercardanotime",level:2},{value:"Hydra.Ledger.Cardano",id:"hydraledgercardano",level:2},{value:"Generators",id:"generators",level:3},{value:"genChainPoint",id:"genchainpoint",level:4},{value:"genValue",id:"genvalue",level:4},{value:"genOutput",id:"genoutput",level:4},{value:"genTxOut",id:"gentxout",level:4},{value:"applyTransactions",id:"applytransactions",level:3},{value:"Tx",id:"tx",level:3},{value:"PParams",id:"pparams",level:3},{value:"UTxO",id:"utxo",level:3},{value:"JSON encoding of AssetName",id:"json-encoding-of-assetname",level:3},{value:"Hydra.JSONSchema",id:"hydrajsonschema",level:2},{value:"prop_validateJSONSchema",id:"prop_validatejsonschema",level:3},{value:"validateJSON withJsonSpecifications",id:"validatejson-withjsonspecifications",level:3},{value:"Hydra.HeadLogicSnapshot",id:"hydraheadlogicsnapshot",level:2},{value:"On AckSn",id:"on-acksn",level:3},{value:"On ReqTx",id:"on-reqtx",level:3},{value:"Generic Snapshot property",id:"generic-snapshot-property",level:3},{value:"Hydra.HeadLogic",id:"hydraheadlogic",level:2},{value:"Coordinated Head Protocol using real Tx",id:"coordinated-head-protocol-using-real-tx",level:3},{value:"Coordinated Head Protocol",id:"coordinated-head-protocol",level:3},{value:"Tracks Transaction Ids",id:"tracks-transaction-ids",level:4},{value:"Decommit",id:"decommit",level:4},{value:"ReqSn",id:"reqsn",level:4},{value:"Hydra.FireForget",id:"hydrafireforget",level:2},{value:"Hydra.Events.FileBased",id:"hydraeventsfilebased",level:2},{value:"eventPairFromPersistenceIncremental",id:"eventpairfrompersistenceincremental",level:3},{value:"persisted event format",id:"persisted-event-format",level:3},{value:"JSON encoding of StateChanged",id:"json-encoding-of-statechanged",level:4},{value:"JSON encoding of (StateEvent (Tx ConwayEra))",id:"json-encoding-of-stateevent-tx-conwayera",level:4},{value:"Hydra.Crypto",id:"hydracrypto",level:2},{value:"MultiSignature",id:"multisignature",level:3},{value:"Signature",id:"signature",level:3},{value:"VerificationKey",id:"verificationkey",level:3},{value:"JSON encoding of (VerificationKey HydraKey)",id:"json-encoding-of-verificationkey-hydrakey",level:4},{value:"SigningKey",id:"signingkey",level:3},{value:"Hydra.ContestationPeriod",id:"hydracontestationperiod",level:2},{value:"fromNominalDiffTime",id:"fromnominaldifftime",level:3},{value:"Hydra.Chain.Direct.Wallet",id:"hydrachaindirectwallet",level:2},{value:"newTinyWallet",id:"newtinywallet",level:3},{value:"coverFee",id:"coverfee",level:3},{value:"applyTxs",id:"applytxs",level:3},{value:"genTxsSpending / genUTxO",id:"gentxsspending--genutxo",level:3},{value:"Hydra.Chain.Direct.TxTrace",id:"hydrachaindirecttxtrace",level:2},{value:"Hydra.Chain.Direct.Tx",id:"hydrachaindirecttx",level:2},{value:"commitTx",id:"committx",level:3},{value:"observeHeadTx",id:"observeheadtx",level:3},{value:"HeadId (cardano)",id:"headid-cardano",level:3},{value:"HeadSeed (cardano)",id:"headseed-cardano",level:3},{value:"Hydra.Chain.Direct.TimeHandle",id:"hydrachaindirecttimehandle",level:2},{value:"Hydra.Chain.Direct.State",id:"hydrachaindirectstate",level:2},{value:"decrement",id:"decrement",level:3},{value:"increment",id:"increment",level:3},{value:"recover",id:"recover",level:3},{value:"deposit",id:"deposit",level:3},{value:"collectCom",id:"collectcom",level:3},{value:"abort",id:"abort",level:3},{value:"commit",id:"commit",level:3},{value:"init",id:"init",level:3},{value:"splitUTxO",id:"splitutxo",level:3},{value:"observeTx",id:"observetx",level:3},{value:"JSON encoding of PubKeyHash",id:"json-encoding-of-pubkeyhash",level:3},{value:"acceptance",id:"acceptance",level:3},{value:"fanout",id:"fanout",level:3},{value:"contest",id:"contest",level:3},{value:"close",id:"close",level:3},{value:"Hydra.Chain.Direct.ScriptRegistry",id:"hydrachaindirectscriptregistry",level:2},{value:"Hydra.Chain.Direct.Handlers",id:"hydrachaindirecthandlers",level:2},{value:"LocalChainState",id:"localchainstate",level:3},{value:"chainSyncHandler",id:"chainsynchandler",level:3},{value:"Hydra.Behavior",id:"hydrabehavior",level:2},{value:"rolling back &amp; forward does not make the node crash",id:"rolling-back--forward-does-not-make-the-node-crash",level:3},{value:"Hydra Node Logging",id:"hydra-node-logging",level:3},{value:"Two participant Head",id:"two-participant-head",level:3},{value:"in an open head",id:"in-an-open-head",level:4},{value:"Decommit",id:"decommit-1",level:5},{value:"Commit",id:"commit-1",level:5},{value:"Single participant Head",id:"single-participant-head",level:3},{value:"Sanity tests of test suite",id:"sanity-tests-of-test-suite",level:3},{value:"Hydra.API.ServerOutput",id:"hydraapiserveroutput",level:2},{value:"JSON encoding of ServerOutput",id:"json-encoding-of-serveroutput",level:3},{value:"JSON encoding of (ReasonablySized (TimedServerOutput (Tx ConwayEra)))",id:"json-encoding-of-reasonablysized-timedserveroutput-tx-conwayera",level:3},{value:"Hydra.API.Server",id:"hydraapiserver",level:2},{value:"TLS support",id:"tls-support",level:3},{value:"Hydra.API.HTTPServer",id:"hydraapihttpserver",level:2},{value:"JSON encoding of (ReasonablySized TransactionSubmitted)",id:"json-encoding-of-reasonablysized-transactionsubmitted",level:3},{value:"JSON encoding of (ReasonablySized (SubmitTxRequest (Tx ConwayEra)))",id:"json-encoding-of-reasonablysized-submittxrequest-tx-conwayera",level:3},{value:"JSON encoding of (ReasonablySized (DraftCommitTxRequest (Tx ConwayEra)))",id:"json-encoding-of-reasonablysized-draftcommittxrequest-tx-conwayera",level:3},{value:"JSON encoding of (ReasonablySized (DraftCommitTxResponse (Tx ConwayEra)))",id:"json-encoding-of-reasonablysized-draftcommittxresponse-tx-conwayera",level:3},{value:"SubmitTxRequest accepted tx formats",id:"submittxrequest-accepted-tx-formats",level:3},{value:"API should respond correctly",id:"api-should-respond-correctly",level:3},{value:"POST /commit",id:"post-commit",level:4},{value:"GET /snapshot/utxo",id:"get-snapshotutxo",level:4},{value:"GET /protocol-parameters",id:"get-protocol-parameters",level:4},{value:"Hydra.API.ClientInput",id:"hydraapiclientinput",level:2},{value:"FromJSON (ValidatedTx era)",id:"fromjson-validatedtx-era",level:3},{value:"JSON encoding of (ReasonablySized (ClientInput (Tx ConwayEra)))",id:"json-encoding-of-reasonablysized-clientinput-tx-conwayera",level:3},{value:"JSON encoding of (ReasonablySized (ClientInput SimpleTx))",id:"json-encoding-of-reasonablysized-clientinput-simpletx",level:3}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,d.R)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"test-results-for-hydra-node",children:"Test results for hydra-node"})}),"\n",(0,l.jsx)(n.h2,{id:"hydrautils",children:"Hydra.Utils"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Should throw if it can't write on disk"}),"\n",(0,l.jsx)(n.li,{children:"Should throw if the file already exists"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"hydrapersistence",children:"Hydra.Persistence"}),"\n",(0,l.jsx)(n.h3,{id:"persistenceincremental",children:"PersistenceIncremental"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"can handle empty files"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"is consistent after multiple append calls in presence of new-lines"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 200 tests:\n67.0% some item contains a new line\n 5.0% no items stored\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"it cannot load from a different thread once having started appending"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"persistence",children:"Persistence"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"can handle empty files"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"is consistent after save/load roundtrip"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"hydraparty",children:"Hydra.Party"}),"\n",(0,l.jsx)(n.h3,{id:"ord",children:"Ord"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"is transitive"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests; 425 discarded.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"is reflexive"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"is antisymmetric"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"implements Eq and Ord correspondingly"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"json-encoding-of-party",children:"JSON encoding of Party"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"allows to encode values with aeson and read them back"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/Party.json"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"has alice, bob, carol sorted"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"hydraoptions",children:"Hydra.Options"}),"\n",(0,l.jsx)(n.h3,{id:"hydra-node-runoptions",children:"Hydra Node RunOptions"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"validateRunOptions: using more than 7 parties should error out"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"validateRunOptions: loaded cardano keys needs to match with the hydra keys length"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"parses with default values"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"parses --host option given valid IPv4 and IPv6 addresses"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"parses --port option given valid port number"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["parses --peer ",(0,l.jsx)(n.code,{children:"<host>:<port>"})," option"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"does parse --peer given ipv6 addresses"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"parses --monitoring-port option given valid port number"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"flag --version returns version with base version from cabal"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"parses --hydra-verification-key option as a filepath"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"parses --hydra-signing-key option as a filepath"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"parses --testnet-magic option as a number"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"parses --mainnet option"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"parses --contestation-period option as a number of seconds"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"parses --mainnet flag"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"parses --node-socket as a filepath"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"parses --cardano-signing-key option as a filepath"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"parses --cardano-verification-key option as a filepath"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"parses --ledger-protocol-parameters-file as a filepath"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"parses --start-chain-from as a pair of slot number and block header hash"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"parses --start-chain-from 0 as starting from genesis"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"parses --hydra-scripts-tx-id as a tx id"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"switches to offline chain when using --initial-utxo"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"json-encoding-of-runoptions",children:"JSON encoding of RunOptions"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"allows to encode values with aeson and read them back"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/RunOptions.json"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"gen-hydra-keys-sub-command",children:"gen-hydra-keys sub-command"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"should be able to parse gen-hydra-keys sub-command"}),"\n",(0,l.jsx)(n.li,{children:"should parse gen-hydra-keys without the output-file flag using default file name"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"offline-sub-command",children:"offline sub-command"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"does parse with defaults"}),"\n",(0,l.jsx)(n.li,{children:"does parse --ledger-genesis"}),"\n",(0,l.jsx)(n.li,{children:"does parse --initial-utxo"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"publish-scripts-sub-command",children:"publish-scripts sub-command"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"parses without any options"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"parses with some missing option (1)"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"parses with some missing option (2)"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"parses with some missing option (3)"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"should parse using testnet and all options"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"should parse using mainnet and all options"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"roundtrip parsing & printing"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"hydranoderun",children:"Hydra.Node.Run"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"throws exception given options are invalid"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"hydranodeinputqueue",children:"Hydra.Node.InputQueue"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"adds sequential id to all enqueued items"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"hydranode",children:"Hydra.Node"}),"\n",(0,l.jsx)(n.h3,{id:"checkheadstate",children:"checkHeadState"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"accepts configuration consistent with HeadState"}),"\n",(0,l.jsx)(n.li,{children:"throws exception given contestation period differs"}),"\n",(0,l.jsx)(n.li,{children:"throws exception given parties differ"}),"\n",(0,l.jsx)(n.li,{children:"log error given configuration mismatches head state"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"stephydranode",children:"stepHydraNode"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"events are sent to all sinks"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"event ids are strictly monotonic"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests (0% empty list of events).\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"can continue after re-hydration"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"emits a single ReqSn as leader, even after multiple ReqTxs"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"rotates snapshot leaders"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"processes out-of-order AckSn"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"notifies client when postTx throws PostTxError"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"signs snapshot even if it has seen conflicting transactions"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"hydrate",children:"hydrate"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"loads events from source into all sinks"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"event ids are consistent"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"fails if one sink fails"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"checks head state"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"hydranetworkreliability",children:"Hydra.Network.Reliability"}),"\n",(0,l.jsx)(n.h3,{id:"sending-messages",children:"sending messages"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"broadcast messages to the network assigning a sequential id"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"stress test networking layer"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 5000 tests.\n\nMessages from Alice to Bob (5000 in total):\n32.18% < 10\n18.46% < 20\n14.20% < 30\n10.68% < 40\n 8.12% < 50\n 6.38% < 60\n 4.44% < 70\n 3.08% < 80\n 1.90% < 90\n 0.56% < 100\n\nMessages from Bob to Alice (5000 in total):\n32.32% < 10\n19.20% < 20\n14.24% < 30\n10.94% < 40\n 7.52% < 50\n 6.50% < 60\n 4.30% < 70\n 2.84% < 80\n 1.70% < 90\n 0.44% < 100\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"broadcast updates counter from peers"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"appends messages to disk and can load them back"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"receiving-messages",children:"receiving messages"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"forward received messages"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"do not drop messages with same ids from different peers"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Ignores messages with malformed acks"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"drops already received messages"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests:\n66% 0\n21% 1\n11% 2\n 1% 3\n 1% 4\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"hydranetworkheartbeat",children:"Hydra.Network.Heartbeat"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"sends a heartbeat message with local host after 500 ms"}),"\n",(0,l.jsx)(n.li,{children:"sends Connected when Ping received from other peer"}),"\n",(0,l.jsx)(n.li,{children:"sends Connected when any message received from other party"}),"\n",(0,l.jsx)(n.li,{children:"do not send Connected on subsequent messages from already Connected party"}),"\n",(0,l.jsx)(n.li,{children:"sends Disconnected given no messages has been received from known party within twice heartbeat delay"}),"\n",(0,l.jsx)(n.li,{children:"stop sending heartbeat message given action sends a message"}),"\n",(0,l.jsx)(n.li,{children:"restart sending heartbeat messages given last message sent is older than heartbeat delay"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"hydranetworkauthenticate",children:"Hydra.Network.Authenticate"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"pass the authenticated messages around"}),"\n",(0,l.jsx)(n.li,{children:"drop message coming from unknown party"}),"\n",(0,l.jsx)(n.li,{children:"drop message coming from party with wrong signature"}),"\n",(0,l.jsx)(n.li,{children:"authenticate the message to broadcast"}),"\n",(0,l.jsx)(n.li,{children:"logs dropped messages"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"serialization",children:"Serialization"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"can roundtrip CBOR encoding/decoding of Signed Hydra Message"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"json-encoding-of-authlog",children:"JSON encoding of AuthLog"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"allows to encode values with aeson and read them back"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/AuthLog.json"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"hydranetwork",children:"Hydra.Network"}),"\n",(0,l.jsx)(n.h3,{id:"configuremessagepersistence",children:"configureMessagePersistence"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"throws ParameterMismatch when configuring given number of acks does not match number of parties"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"serialisation",children:"Serialisation"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"can roundtrip CBOR encoding/decoding of Hydra Message"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"json-encoding-of-message-simpletx",children:"JSON encoding of (Message SimpleTx)"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"allows to encode values with aeson and read them back"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/Message SimpleTx.json"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"ouroboros-network",children:"Ouroboros Network"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"broadcasts messages to single connected peer"}),"\n",(0,l.jsx)(n.li,{children:"handshake failures should call the handshakeCallback"}),"\n",(0,l.jsx)(n.li,{children:"broadcasts messages between 3 connected peers"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"hydramodelmockchain",children:"Hydra.Model.MockChain"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"works with valid transaction"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"hydramodel",children:"Hydra.Model"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"model should not generate 0 Ada UTxO"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 10000 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"model generates consistent traces"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 10000 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"implementation respects model"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n\nAction polarity (680 in total):\n100.0% +\n\nActions (680 in total):\n31.5% +NewTx\n24.6% +Commit\n13.7% +Seed\n12.8% +Init\n 4.7% +Abort\n 3.5% +Close\n 3.5% +Fanout\n 3.1% +RollbackAndForward\n 2.6% +Decommit\n\nTransitions (680 in total):\n36.6% Open -> Open\n19.0% Initial -> Initial\n13.7% Start -> Idle\n12.8% Idle -> Initial\n 5.6% Initial -> Open\n 4.7% Initial -> Final\n 3.5% Closed -> Final\n 3.5% Open -> Closed\n 0.6% Closed -> Closed\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"check conflict-free liveness"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n\nAction polarity (913 in total):\n100.0% +\n\nActions (913 in total):\n33.0% +NewTx\n18.9% +Commit\n11.0% +StopTheWorld\n 9.6% +Seed\n 9.0% +Init\n 3.7% +Abort\n 3.5% +RollbackAndForward\n 3.1% +Decommit\n 2.8% +Close\n 2.7% +Fanout\n 1.3% +ObserveConfirmedTx\n 1.3% +Wait\n\nTransitions (913 in total):\n43.2% Open -> Open\n15.9% Initial -> Initial\n 9.6% Start -> Idle\n 9.0% Idle -> Initial\n 6.5% Final -> Final\n 4.2% Initial -> Open\n 3.7% Initial -> Final\n 2.8% Open -> Closed\n 2.7% Closed -> Final\n 1.3% Start -> Start\n 0.7% Idle -> Idle\n 0.4% Closed -> Closed\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"check head opens if all participants commit"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n\nAction polarity (811 in total):\n100.0% +\n\nActions (811 in total):\n50.7% +Commit\n12.3% +Init\n12.3% +ObserveHeadIsOpen\n12.3% +Seed\n12.3% +Wait\n\nTransitions (811 in total):\n38.3% Initial -> Initial\n24.7% Open -> Open\n12.3% Idle -> Initial\n12.3% Initial -> Open\n12.3% Start -> Idle\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"fanout contains whole confirmed UTxO"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n\nAction polarity (937 in total):\n100.0% +\n\nActions (937 in total):\n32.1% +NewTx\n18.5% +Commit\n10.7% +StopTheWorld\n 9.4% +Seed\n 8.8% +Init\n 4.1% +Close\n 3.9% +Fanout\n 3.6% +Abort\n 3.4% +RollbackAndForward\n 3.0% +Decommit\n 1.3% +ObserveConfirmedTx\n 1.3% +Wait\n\nTransitions (937 in total):\n40.8% Open -> Open\n15.5% Initial -> Initial\n 9.4% Start -> Idle\n 8.8% Idle -> Initial\n 7.6% Final -> Final\n 4.1% Initial -> Open\n 4.1% Open -> Closed\n 3.9% Closed -> Final\n 3.6% Initial -> Final\n 1.3% Start -> Start\n 0.6% Idle -> Idle\n 0.4% Closed -> Closed\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"toRealUTxO is distributive"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"toTxOuts is distributive"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"parties contest to wrong closed snapshot"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n\nAction polarity (1411 in total):\n100.00% +\n\nActions (1411 in total):\n29.13% +Commit\n14.17% +Wait\n 7.09% +CloseWithInitialSnapshot\n 7.09% +Fanout\n 7.09% +Init\n 7.09% +NewTx\n 7.09% +ObserveConfirmedTx\n 7.09% +ObserveHeadIsOpen\n 7.09% +Seed\n 7.09% +StopTheWorld\n\nTransitions (1411 in total):\n35.44% Open -> Open\n22.04% Initial -> Initial\n 7.09% Closed -> Final\n 7.09% Final -> Final\n 7.09% Idle -> Initial\n 7.09% Initial -> Open\n 7.09% Open -> Closed\n 7.09% Start -> Idle\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"checkModel"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n\nAction polarity (680 in total):\n100.0% +\n\nActions (680 in total):\n31.5% +NewTx\n24.6% +Commit\n13.7% +Seed\n12.8% +Init\n 4.7% +Abort\n 3.5% +Close\n 3.5% +Fanout\n 3.1% +RollbackAndForward\n 2.6% +Decommit\n\nTransitions (680 in total):\n36.6% Open -> Open\n19.0% Initial -> Initial\n13.7% Start -> Idle\n12.8% Idle -> Initial\n 5.6% Initial -> Open\n 4.7% Initial -> Final\n 3.5% Closed -> Final\n 3.5% Open -> Closed\n 0.6% Closed -> Closed\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"hydraloggingmonitoring",children:"Hydra.Logging.Monitoring"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"provides prometheus metrics from traces"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"hydralogging",children:"Hydra.Logging"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"dumps logs to stdout in JSON with timestamp"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Validates logs.yaml schema"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 1 test.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Schema covers all defined log entries"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"hydraledgersimple",children:"Hydra.Ledger.Simple"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"validates only correctly built transactions"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"hydraledgercardanotime",children:"Hydra.Ledger.Cardano.Time"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"roundtrip slotNoToUTCTime and slotNoFromUTCTime"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"slotNoFromUTCTime works for any time"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests:\n49% after system start\n49% before system start\n 2% equal to system start\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"hydraledgercardano",children:"Hydra.Ledger.Cardano"}),"\n",(0,l.jsx)(n.h3,{id:"generators",children:"Generators"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"arbitrary @TxIn is reasonably collision resistant"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100000 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"arbitrary @TxId is reasonably collision resistant"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100000 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"arbitrary @(VerificationKey PaymentKey) is reasonably collision resistant"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100000 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"arbitrary @(Hash PaymentKey) is reasonably collision resistant"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100000 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"genUTxO does not generate collapsing values"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"genUTxOAdaOnlyOfSize does not generate collapsing values"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"genUTxOFor is reasonably collision resistant"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100000 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"genOneUTxOFor is reasonably collision resistant"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100000 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"genchainpoint",children:"genChainPoint"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"generates only some genesis points"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 800 tests (82.8% not at genesis).\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"genvalue",children:"genValue"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces realistic values"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"genoutput",children:"genOutput"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"has enough lovelace to cover assets"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"gentxout",children:"genTxOut"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"does generate good values"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests:\n64% has datum\n58% is Script output\n51% has multiple assets \n49% has only ADA\n42% is VK output\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"applytransactions",children:"applyTransactions"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"works with valid transaction"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"works with valid transaction deserialised from JSON"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"tx",children:"Tx"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"JSON encoding of Tx according to schema"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 1 test.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"pparams",children:"PParams"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Roundtrip JSON encoding"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"utxo",children:"UTxO"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"JSON encoding of UTxO according to schema"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 1 test.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"parses a specific UTxO"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"json-encoding-of-assetname",children:"JSON encoding of AssetName"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"allows to encode values with aeson and read them back"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/AssetName.json"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"hydrajsonschema",children:"Hydra.JSONSchema"}),"\n",(0,l.jsx)(n.h3,{id:"prop_validatejsonschema",children:"prop_validateJSONSchema"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"works with api.yaml and UTCTime"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 1 test.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"validatejson-withjsonspecifications",children:"validateJSON withJsonSpecifications"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"works using identity selector and Null input"}),"\n",(0,l.jsx)(n.li,{children:"fails on non-existing schema file"}),"\n",(0,l.jsx)(n.li,{children:"fails with missing tool"}),"\n",(0,l.jsx)(n.li,{children:"selects a sub-schema correctly"}),"\n",(0,l.jsx)(n.li,{children:"produces helpful errors"}),"\n",(0,l.jsx)(n.li,{children:"resolves refs"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"hydraheadlogicsnapshot",children:"Hydra.HeadLogicSnapshot"}),"\n",(0,l.jsx)(n.h3,{id:"on-acksn",children:"On AckSn"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"sends ReqSn  when leader and there are seen transactions"}),"\n",(0,l.jsx)(n.li,{children:"does NOT send ReqSn when we are the leader but there are NO seen transactions"}),"\n",(0,l.jsx)(n.li,{children:"does NOT send ReqSn when we are NOT the leader but there are seen transactions"}),"\n",(0,l.jsx)(n.li,{children:"updates seenSnapshot state when sending ReqSn"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"on-reqtx",children:"On ReqTx"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"always emit ReqSn given head has 1 member"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"sends ReqSn when leader and no snapshot in flight"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"does NOT send ReqSn when we are NOT the leader even if no snapshot in flight"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"does NOT send ReqSn when we are the leader but snapshot in flight"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"updates seenSnapshot state when sending ReqSn"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"generic-snapshot-property",children:"Generic Snapshot property"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"there's always a leader for every snapshot number"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests; 13 discarded.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"hydraheadlogic",children:"Hydra.HeadLogic"}),"\n",(0,l.jsx)(n.h3,{id:"coordinated-head-protocol-using-real-tx",children:"Coordinated Head Protocol using real Tx"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"any tx with expiring upper validity range gets pruned"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"coordinated-head-protocol",children:"Coordinated Head Protocol"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"reports if a requested tx is expired"}),"\n",(0,l.jsx)(n.li,{children:"waits if a requested tx is not (yet) applicable"}),"\n",(0,l.jsx)(n.li,{children:"confirms snapshot given it receives AckSn from all parties"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"tracks-transaction-ids",children:"Tracks Transaction Ids"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"keeps transactions in allTxs given it receives a ReqTx"}),"\n",(0,l.jsx)(n.li,{children:"removes transactions in allTxs given it receives a ReqSn"}),"\n",(0,l.jsx)(n.li,{children:"removes transactions from allTxs when included in a acked snapshot even when emitting a ReqSn"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"decommit",children:"Decommit"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"observes DecommitRequested and ReqDec in an Open state"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"ignores ReqDec when not in Open state"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"reports if a requested decommit tx is expired"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"wait for second decommit when another one is in flight"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"cannot commit while another decommit is pending"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"waits if a requested decommit tx is not (yet) applicable"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"updates decommitTx on valid ReqDec"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"emits ReqSn on valid RecDec"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"reqsn",children:"ReqSn"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"prunes local txs in order"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"rejects last AckSn if one signature was from a different snapshot"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"rejects last AckSn if one signature was from a different key"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"rejects last AckSn if one signature was from a completely different message"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"rejects last AckSn if already received signature from this party"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"rejects snapshot request with transaction not applicable to previous snapshot"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"waits if we receive a snapshot with unseen transactions"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"waits if we receive an AckSn for an unseen snapshot"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"rejects if we receive a too far future snapshot"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"waits if we receive a future snapshot while collecting signatures"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"acks signed snapshot from the constant leader"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"does not ack snapshots from non-leaders"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"rejects too-old snapshots"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"rejects too-old snapshots when collecting signatures"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"rejects too-new snapshots from the leader"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"rejects invalid snapshots version"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"rejects overlapping snapshot requests from the leader"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"rejects same version snapshot requests with differring decommit txs"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"ignores in-flight ReqTx when closed"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"ignores in-flight ReqDec when closed"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"everyone does collect on last commit after collect com"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"cannot observe abort after collect com"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"cannot observe collect com after abort"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"notifies user on head closing and when passing the contestation deadline"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"contests when detecting close with old snapshot"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"re-contests when detecting contest with old snapshot"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"ignores unrelated initTx"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"connectivity messages passthrough without affecting the current state"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"ignores abortTx of another head"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"ignores collectComTx of another head"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"ignores depositTx of another head"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"ignores recoverTx of another head"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"ignores decrementTx of another head"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"ignores closeTx of another head"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"ignores contestTx of another head"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"ignores fanoutTx of another head"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"empty inputs in decommit tx are prevented"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"hydrafireforget",children:"Hydra.FireForget"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"client can send 'Hail Hydra!' to server"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"hydraeventsfilebased",children:"Hydra.Events.FileBased"}),"\n",(0,l.jsx)(n.h3,{id:"eventpairfrompersistenceincremental",children:"eventPairFromPersistenceIncremental"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"can handle continuous events"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"can handle non-continuous events"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"can handle duplicate events"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"can bootstrap from plain StateChanged events"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"persisted-event-format",children:"persisted event format"}),"\n",(0,l.jsx)(n.h4,{id:"json-encoding-of-statechanged",children:"JSON encoding of StateChanged"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"allows to encode values with aeson and read them back"}),"\n",(0,l.jsx)(n.li,{children:"produces the same JSON as is found in golden/StateChanged/HeadInitialized.json"}),"\n",(0,l.jsx)(n.li,{children:"produces the same JSON as is found in golden/StateChanged/CommittedUTxO.json"}),"\n",(0,l.jsx)(n.li,{children:"produces the same JSON as is found in golden/StateChanged/HeadAborted.json"}),"\n",(0,l.jsx)(n.li,{children:"produces the same JSON as is found in golden/StateChanged/HeadOpened.json"}),"\n",(0,l.jsx)(n.li,{children:"produces the same JSON as is found in golden/StateChanged/TransactionReceived.json"}),"\n",(0,l.jsx)(n.li,{children:"produces the same JSON as is found in golden/StateChanged/TransactionAppliedToLocalUTxO.json"}),"\n",(0,l.jsx)(n.li,{children:"produces the same JSON as is found in golden/StateChanged/CommitRecorded.json"}),"\n",(0,l.jsx)(n.li,{children:"produces the same JSON as is found in golden/StateChanged/CommitRecovered.json"}),"\n",(0,l.jsx)(n.li,{children:"produces the same JSON as is found in golden/StateChanged/DecommitRecorded.json"}),"\n",(0,l.jsx)(n.li,{children:"produces the same JSON as is found in golden/StateChanged/SnapshotRequestDecided.json"}),"\n",(0,l.jsx)(n.li,{children:"produces the same JSON as is found in golden/StateChanged/SnapshotRequested.json"}),"\n",(0,l.jsx)(n.li,{children:"produces the same JSON as is found in golden/StateChanged/CommitFinalized.json"}),"\n",(0,l.jsx)(n.li,{children:"produces the same JSON as is found in golden/StateChanged/DecommitFinalized.json"}),"\n",(0,l.jsx)(n.li,{children:"produces the same JSON as is found in golden/StateChanged/PartySignedSnapshot.json"}),"\n",(0,l.jsx)(n.li,{children:"produces the same JSON as is found in golden/StateChanged/SnapshotConfirmed.json"}),"\n",(0,l.jsx)(n.li,{children:"produces the same JSON as is found in golden/StateChanged/HeadClosed.json"}),"\n",(0,l.jsx)(n.li,{children:"produces the same JSON as is found in golden/StateChanged/HeadContested.json"}),"\n",(0,l.jsx)(n.li,{children:"produces the same JSON as is found in golden/StateChanged/HeadIsReadyToFanout.json"}),"\n",(0,l.jsx)(n.li,{children:"produces the same JSON as is found in golden/StateChanged/HeadFannedOut.json"}),"\n",(0,l.jsx)(n.li,{children:"produces the same JSON as is found in golden/StateChanged/ChainRolledBack.json"}),"\n",(0,l.jsx)(n.li,{children:"produces the same JSON as is found in golden/StateChanged/TickObserved.json"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"json-encoding-of-stateevent-tx-conwayera",children:"JSON encoding of (StateEvent (Tx ConwayEra))"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"allows to encode values with aeson and read them back"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/StateEvent (Tx ConwayEra).json"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"hydracrypto",children:"Hydra.Crypto"}),"\n",(0,l.jsx)(n.h3,{id:"multisignature",children:"MultiSignature"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"is sensitive to order"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests; 61 discarded.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"aggregate/verifyMultiSignature roundtrip"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"aggregateInOrder/verifyMultiSignature roundtrip"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests; 19 discarded.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"verifyMultiSignature fails when signature is missing"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests; 86 discarded.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"does not validate multisig if less keys given"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests; 33 discarded (10% empty).\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"signature",children:"Signature"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"show includes escaped hex"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"can sign arbitrary messages"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests; 33 discarded.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"sign/verify roundtrip"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"verificationkey",children:"VerificationKey"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"show includes escaped hex"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"json-encoding-of-verificationkey-hydrakey",children:"JSON encoding of (VerificationKey HydraKey)"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"allows to encode values with aeson and read them back"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/VerificationKey HydraKey.json"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"signingkey",children:"SigningKey"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"show includes escaped hex"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"can be generated when seed exceeds the max seed size for algorithm"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"can be generated"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests; 33 discarded.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"arbitrary @(SigningKey HydraKey) is reasonably collision resistant"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100000 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"hydracontestationperiod",children:"Hydra.ContestationPeriod"}),"\n",(0,l.jsx)(n.h3,{id:"fromnominaldifftime",children:"fromNominalDiffTime"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["works for diff times ",(0,l.jsx)(n.code,{children:"> 0"})]}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["fails for diff times ",(0,l.jsx)(n.code,{children:"<= 0"})]}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"rounds to 1 second"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"hydrachaindirectwallet",children:"Hydra.Chain.Direct.Wallet"}),"\n",(0,l.jsx)(n.h3,{id:"newtinywallet",children:"newTinyWallet"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"initialises wallet by querying UTxO"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"re-queries UTxO from the tip, even on reset"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"coverfee",children:"coverFee"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"sets min utxo values"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"balances transaction with fees"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests (0% spending script).\n\nOnly 0% spending script, but expected 5%\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"prefers largest utxo"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"applytxs",children:"applyTxs"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"only reduces the UTXO set when no address is ours"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Seen inputs are consumed and not in the resulting UTXO"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"gentxsspending--genutxo",children:"genTxsSpending / genUTxO"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"are well-suited for testing"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests:\n51% has dependent txs\n28% has no tx that are ours\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"hydrachaindirecttxtrace",children:"Hydra.Chain.Direct.TxTrace"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"realWorldModelUTxO preserves addition"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"generates interesting transaction traces"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 6400 tests:\n88.08% has some snapshots\n48.56% close with non initial snapshots\n40.61% fanout with additional de/commit UTxO to distribute\n40.61% fanout with some UTxO\n40.61% reach fanout\n11.92% empty\n11.92% has decrements\n11.92% has deposits\n11.92% has increments\n 0.25% has multiple contests\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"all valid transactions"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 200 tests:\n87.5% has some snapshots\n49.5% close with non initial snapshots\n41.0% fanout with additional de/commit UTxO to distribute\n41.0% fanout with some UTxO\n41.0% reach fanout\n12.5% empty\n12.5% has decrements\n12.5% has deposits\n12.5% has increments\n 0.5% has multiple contests\n\nAction polarity (2138 in total):\n87.18% +\n12.82% -\n\nActions (2138 in total):\n43.26% +NewSnapshot\n32.04% +Deposit\n 8.84% -Fanout\n 4.63% +Close\n 3.98% -Increment\n 3.84% +Fanout\n 3.41% +Contest\n\nActions rejected by precondition (13733 in total):\n59.164% Close\n26.702% Decrement\n10.034% Increment\n 2.971% Contest\n 1.129% Deposit\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"hydrachaindirecttx",children:"Hydra.Chain.Direct.Tx"}),"\n",(0,l.jsx)(n.h3,{id:"committx",children:"commitTx"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"genBlueprintTx generates interesting txs"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests:\n100% blueprint has reference input\n100% blueprint spends script UTxO\n72% blueprint spends from script AND pub key\n72% blueprint spends pub key UTxO\n47% blueprint has reward redeemer\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Validate blueprint and commit transactions"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"observeheadtx",children:"observeHeadTx"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"All valid transitions for all possible states can be observed."}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 200 tests.\n\nChainTransition (200 in total):\n19.0% Fanout\n13.5% Abort\n11.5% Contest\n11.5% Decrement\n10.5% Collect\n10.5% Commit\n 8.5% Close\n 8.5% Increment\n 6.5% Init\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"headid-cardano",children:"HeadId (cardano)"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"headIdToPolicyId . mkHeadId === id"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"curencySymbolToHeadId . headIdToCurrencySymbol === id"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"headseed-cardano",children:"HeadSeed (cardano)"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"headSeedToTxIn . txInToHeadSeed === id"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"hydrachaindirecttimehandle",children:"Hydra.Chain.Direct.TimeHandle"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"can roundtrip currentPointInTime"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"should convert slot within latest/current era"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"hydrachaindirectstate",children:"Hydra.Chain.Direct.State"}),"\n",(0,l.jsx)(n.h3,{id:"decrement",children:"decrement"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"transaction size is below 16kB"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests (100% 1kB).\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"validates within maxTxExecutionUnits"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"increment",children:"increment"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"transaction size is below 16kB"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests (100% 2kB).\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"validates within maxTxExecutionUnits"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"recover",children:"recover"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"transaction size is below 16kB"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests (100% 1kB).\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"validates within maxTxExecutionUnits"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"observes recover"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"deposit",children:"deposit"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"transaction size is below 16kB"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests (100% 0kB).\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"validates within maxTxExecutionUnits"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"observes deposit"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"collectcom",children:"collectCom"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"transaction size is below 16kB"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests (100% 1kB).\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"validates within maxTxExecutionUnits"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"abort",children:"abort"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"transaction size is below 16kB"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests:\n73% Abort after some (but not all) commits\n15% Abort immediately, after 0 commits\n12% Abort after all commits\n\n78% 6kB\n22% 5kB\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"validates within maxTxExecutionUnits"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests:\n73% Abort after some (but not all) commits\n15% Abort immediately, after 0 commits\n12% Abort after all commits\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"can create valid abort transactions for any observed head"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"commit",children:"commit"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"transaction size is below 16kB"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests:\n93% Non-empty commit\n 7% Empty commit\n\n100% 0kB\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"validates within maxTxExecutionUnits"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests:\n93% Non-empty commit\n 7% Empty commit\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"only proper head is observed"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests:\n93% Non-empty commit\n 7% Empty commit\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"consumes all inputs that are committed"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests:\n93% Non-empty commit\n 7% Empty commit\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"can only be applied / observed once"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests:\n93% Non-empty commit\n 7% Empty commit\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"reject committing outputs with byron addresses"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"reject Commits with more than maxMainnetLovelace Lovelace"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"init",children:"init"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"transaction size is below 16kB"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests:\n100% 2+ parties\n 0% 1 party\n\n73% 6kB\n27% 7kB\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"validates within maxTxExecutionUnits"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests:\n100% 2+ parties\n 0% 1 party\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"only proper head is observed"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests (100% NotAHeadPolicy).\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"splitutxo",children:"splitUTxO"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"it splits at least one utxo off"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests; 47 discarded.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"observetx",children:"observeTx"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"All valid transitions for all possible states can be observed."}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 200 tests.\n\nChainTransition (200 in total):\n19.0% Fanout\n13.5% Abort\n11.5% Contest\n11.5% Decrement\n10.5% Collect\n10.5% Commit\n 8.5% Close\n 8.5% Increment\n 6.5% Init\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"json-encoding-of-pubkeyhash",children:"JSON encoding of PubKeyHash"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"allows to encode values with aeson and read them back"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/PubKeyHash.json"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"observes distributed outputs"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"acceptance",children:"acceptance"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"can close & fanout every collected head"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests:\n56% collect, close and fanout passed\n44% collect failed already\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"fanout",children:"fanout"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"transaction size is below 16kB"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests:\n68% Fanout size: 10-40\n32% Fanout size: 1-10\n\n100% 6kB\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"validates within maxTxExecutionUnits"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests:\n68% Fanout size: 10-40\n32% Fanout size: 1-10\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"contest",children:"contest"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"transaction size is below 16kB"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests (100% 1kB).\n\nClose point (slot) (100 in total):\n100% > 0\n\nContestation period (100 in total):\n19% > k blocks\n16% one month\n15% one week\n14% < k blocks\n14% one year\n12% one day\n10% k blocks on mainnet\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"validates within maxTxExecutionUnits"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n\nClose point (slot) (100 in total):\n100% > 0\n\nContestation period (100 in total):\n19% > k blocks\n16% one month\n15% one week\n14% < k blocks\n14% one year\n12% one day\n10% k blocks on mainnet\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"close",children:"close"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"transaction size is below 16kB"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests:\n100% ConfirmedSnapshot\n\n100% 1kB\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"validates within maxTxExecutionUnits"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests (100% ConfirmedSnapshot).\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"hydrachaindirectscriptregistry",children:"Hydra.Chain.Direct.ScriptRegistry"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"newScriptRegistry (registryUTxO r) === Just r"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"hydrachaindirecthandlers",children:"Hydra.Chain.Direct.Handlers"}),"\n",(0,l.jsx)(n.h3,{id:"localchainstate",children:"LocalChainState"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"can resume from chain state"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests:\n19% Rollback 4 blocks\n15% Rollback 2 blocks\n12% Rollback 3 blocks\n11% Rollback 7 blocks\n11% Rollback 8 blocks\n10% Rollback 6 blocks\n 8% Rollback 1 blocks\n 8% Rollback 5 blocks\n 6% Rollback 0 blocks\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"chainsynchandler",children:"chainSyncHandler"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"roll forward results in Tick events"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"roll forward fails with outdated TimeHandle"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"observes transactions onRollForward"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests:\n16% Fanout\n14% Commit\n13% Init\n12% Decrement\n12% Increment\n10% Collect\n 9% Close\n 8% Abort\n 6% Contest\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"rollbacks state onRollBackward"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests:\n12% Rollback to: ChainSlot 0 / 4\n10% Rollback to: ChainSlot 0 / 8\n 9% Rollback to: ChainSlot 0 / 7\n 8% Rollback to: ChainSlot 0 / 3\n 7% Rollback to: ChainSlot 1 / 2\n 6% Rollback to: ChainSlot 0 / 2\n 6% Rollback to: ChainSlot 0 / 6\n 5% Rollback to: ChainSlot 0 / 5\n 4% Rollback to: ChainSlot 1 / 5\n 4% Rollback to: ChainSlot 4 / 6\n 3% Rollback to: ChainSlot 3 / 7\n 2% Rollback to: ChainSlot 1 / 3\n 2% Rollback to: ChainSlot 2 / 2\n 2% Rollback to: ChainSlot 3 / 4\n 2% Rollback to: ChainSlot 4 / 4\n 2% Rollback to: ChainSlot 6 / 6\n 2% Rollback to: ChainSlot 6 / 8\n 2% Rollback to: ChainSlot 7 / 7\n 1% Rollback to: ChainSlot 1 / 4\n 1% Rollback to: ChainSlot 1 / 7\n 1% Rollback to: ChainSlot 1 / 8\n 1% Rollback to: ChainSlot 2 / 3\n 1% Rollback to: ChainSlot 2 / 4\n 1% Rollback to: ChainSlot 2 / 5\n 1% Rollback to: ChainSlot 3 / 3\n 1% Rollback to: ChainSlot 3 / 5\n 1% Rollback to: ChainSlot 3 / 6\n 1% Rollback to: ChainSlot 5 / 6\n 1% Rollback to: ChainSlot 6 / 7\n 1% Rollback to: ChainSlot 7 / 8\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"hydrabehavior",children:"Hydra.Behavior"}),"\n",(0,l.jsx)(n.h3,{id:"rolling-back--forward-does-not-make-the-node-crash",children:"rolling back & forward does not make the node crash"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"does work for rollbacks past init"}),"\n",(0,l.jsx)(n.li,{children:"does work for rollbacks past open"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"hydra-node-logging",children:"Hydra Node Logging"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"traces processing of events"}),"\n",(0,l.jsx)(n.li,{children:"traces handling of effects"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"two-participant-head",children:"Two participant Head"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"only opens the head after all nodes committed"}),"\n",(0,l.jsx)(n.li,{children:"can abort and re-open a head when one party has not committed"}),"\n",(0,l.jsx)(n.li,{children:"cannot abort head when commits have been collected"}),"\n",(0,l.jsx)(n.li,{children:"ignores head initialization of other head"}),"\n",(0,l.jsx)(n.li,{children:"outputs committed utxo when client requests it"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"in-an-open-head",children:"in an open head"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"sees the head closed by other nodes"}),"\n",(0,l.jsx)(n.li,{children:"valid new transactions are seen by all parties"}),"\n",(0,l.jsx)(n.li,{children:"valid new transactions get snapshotted"}),"\n",(0,l.jsx)(n.li,{children:"snapshots are created as long as transactions to snapshot exist"}),"\n",(0,l.jsx)(n.li,{children:"depending transactions stay pending and are confirmed in order"}),"\n",(0,l.jsx)(n.li,{children:"depending transactions expire if not applicable in time"}),"\n",(0,l.jsx)(n.li,{children:"sending two conflicting transactions should lead one being confirmed and one expired"}),"\n",(0,l.jsx)(n.li,{children:"outputs utxo from confirmed snapshot when client requests it"}),"\n"]}),"\n",(0,l.jsx)(n.h5,{id:"decommit-1",children:"Decommit"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"can request decommit"}),"\n",(0,l.jsx)(n.li,{children:"requested decommits get approved"}),"\n",(0,l.jsx)(n.li,{children:"can only process one decommit at once"}),"\n",(0,l.jsx)(n.li,{children:"can process transactions while decommit pending"}),"\n",(0,l.jsx)(n.li,{children:"can close with decommit in flight"}),"\n",(0,l.jsx)(n.li,{children:"fanout utxo is correct after a decommit"}),"\n",(0,l.jsx)(n.li,{children:"can fanout with empty utxo"}),"\n"]}),"\n",(0,l.jsx)(n.h5,{id:"commit-1",children:"Commit"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"requested commits get approved"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"can process multiple commits"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"can process transactions while commit pending"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"can close with commit in flight"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"fanout utxo is correct after a commit"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"can do new deposit once the first one has settled"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"multiple commits and decommits in sequence"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"commit and decommit same utxo"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"can be finalized by all parties after contestation period"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"contest automatically when detecting closing with old snapshot"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"single-participant-head",children:"Single participant Head"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"accepts Init command"}),"\n",(0,l.jsx)(n.li,{children:"accepts Commit after successful Init"}),"\n",(0,l.jsx)(n.li,{children:"can close an open head"}),"\n",(0,l.jsx)(n.li,{children:"does not fanout automatically"}),"\n",(0,l.jsx)(n.li,{children:"does finalize head after contestation period upon command"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"sanity-tests-of-test-suite",children:"Sanity tests of test suite"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"does not delay for real"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"hydraapiserveroutput",children:"Hydra.API.ServerOutput"}),"\n",(0,l.jsx)(n.h3,{id:"json-encoding-of-serveroutput",children:"JSON encoding of ServerOutput"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"allows to encode values with aeson and read them back"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/ServerOutput/PeerConnected.json"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/ServerOutput/PeerDisconnected.json"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/ServerOutput/PeerHandshakeFailure.json"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/ServerOutput/HeadIsInitializing.json"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/ServerOutput/Committed.json"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/ServerOutput/HeadIsOpen.json"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/ServerOutput/HeadIsClosed.json"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/ServerOutput/HeadIsContested.json"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/ServerOutput/ReadyToFanout.json"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/ServerOutput/HeadIsAborted.json"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/ServerOutput/HeadIsFinalized.json"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/ServerOutput/CommandFailed.json"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/ServerOutput/TxValid.json"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/ServerOutput/TxInvalid.json"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/ServerOutput/SnapshotConfirmed.json"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/ServerOutput/GetUTxOResponse.json"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/ServerOutput/InvalidInput.json"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/ServerOutput/Greetings.json"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/ServerOutput/PostTxOnChainFailed.json"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/ServerOutput/IgnoredHeadInitializing.json"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/ServerOutput/DecommitRequested.json"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/ServerOutput/DecommitInvalid.json"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/ServerOutput/DecommitApproved.json"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/ServerOutput/DecommitFinalized.json"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/ServerOutput/CommitRecorded.json"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/ServerOutput/CommitApproved.json"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/ServerOutput/CommitFinalized.json"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/ServerOutput/CommitRecovered.json"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/ServerOutput/CommitIgnored.json"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"matches JSON schema"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 1 test.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"json-encoding-of-reasonablysized-timedserveroutput-tx-conwayera",children:"JSON encoding of (ReasonablySized (TimedServerOutput (Tx ConwayEra)))"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"allows to encode values with aeson and read them back"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/ReasonablySized (TimedServerOutput (Tx ConwayEra)).json"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"hydraapiserver",children:"Hydra.API.Server"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"should fail on port in use"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"greets"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Greetings should contain the hydra-node version"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"sends sendOutput to all connected clients"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"sends all sendOutput history to all connected clients after a restart"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"echoes history (past outputs) to client upon reconnection"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests:\n91% more than one message when reconnecting\n 5% no message when reconnecting\n 4% only one message when reconnecting\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"does not echo history if client says no"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests:\n91% more than one message when reconnecting\n 5% no message when reconnecting\n 4% only one message when reconnecting\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"removes UTXO from snapshot when clients request it"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"sequence numbers are continuous"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"displays correctly headStatus and snapshotUtxo in a Greeting message"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"greets with correct head status and snapshot utxo after restart"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"sends an error when input cannot be decoded"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"tls-support",children:"TLS support"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"accepts TLS connections when configured"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"hydraapihttpserver",children:"Hydra.API.HTTPServer"}),"\n",(0,l.jsx)(n.h3,{id:"json-encoding-of-reasonablysized-transactionsubmitted",children:"JSON encoding of (ReasonablySized TransactionSubmitted)"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"allows to encode values with aeson and read them back"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/ReasonablySized TransactionSubmitted.json"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"json-encoding-of-reasonablysized-submittxrequest-tx-conwayera",children:"JSON encoding of (ReasonablySized (SubmitTxRequest (Tx ConwayEra)))"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"allows to encode values with aeson and read them back"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/ReasonablySized (SubmitTxRequest (Tx ConwayEra)).json"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"json-encoding-of-reasonablysized-draftcommittxrequest-tx-conwayera",children:"JSON encoding of (ReasonablySized (DraftCommitTxRequest (Tx ConwayEra)))"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"allows to encode values with aeson and read them back"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/ReasonablySized (DraftCommitTxRequest (Tx ConwayEra)).json"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"json-encoding-of-reasonablysized-draftcommittxresponse-tx-conwayera",children:"JSON encoding of (ReasonablySized (DraftCommitTxResponse (Tx ConwayEra)))"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"allows to encode values with aeson and read them back"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/ReasonablySized (DraftCommitTxResponse (Tx ConwayEra)).json"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Validate /commit publish api schema"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 1 test.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Validate /commit subscribe api schema"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 1 test.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Validate /cardano-transaction publish api schema"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 1 test.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Validate /cardano-transaction subscribe api schema"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 1 test.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Validate /decommit publish api schema"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 1 test.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Validate /decommit subscribe api schema"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 1 test.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Validate /commit publish api schema"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 1 test.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Validate /commit subscribe api schema"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 1 test.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Validate /commits publish api schema"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 1 test.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Validate /commits subscribe api schema"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 1 test.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Validate /commits/tx-id publish api schema"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 1 test.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Validate /commits/tx-id subscribe api schema"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 1 test.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"submittxrequest-accepted-tx-formats",children:"SubmitTxRequest accepted tx formats"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"accepts json encoded transaction"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"accepts transaction encoded as TextEnvelope"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"api-should-respond-correctly",children:"API should respond correctly"}),"\n",(0,l.jsx)(n.h4,{id:"post-commit",children:"POST /commit"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"responds on valid requests"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"handles PostTxErrors accordingly"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 800 tests:\n 4.1% InvalidHeadId\n 3.9% CannotFindOwnInitial\n 3.9% CommittedTooMuchADAForMainnet\n 3.4% UnsupportedLegacyOutput\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"get-snapshotutxo",children:"GET /snapshot/utxo"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"responds correctly"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"ok response matches schema"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 4 tests:\n50% empty\n50% non empty\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"has inlineDatumRaw"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"get-protocol-parameters",children:"GET /protocol-parameters"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"matches schema"}),"\n",(0,l.jsx)(n.li,{children:"responds given parameters"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"hydraapiclientinput",children:"Hydra.API.ClientInput"}),"\n",(0,l.jsx)(n.h3,{id:"fromjson-validatedtx-era",children:"FromJSON (ValidatedTx era)"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"accepts transactions produced via cardano-cli"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"json-encoding-of-reasonablysized-clientinput-tx-conwayera",children:"JSON encoding of (ReasonablySized (ClientInput (Tx ConwayEra)))"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"allows to encode values with aeson and read them back"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/ReasonablySized (ClientInput (Tx ConwayEra)).json"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"json-encoding-of-reasonablysized-clientinput-simpletx",children:"JSON encoding of (ReasonablySized (ClientInput SimpleTx))"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"allows to encode values with aeson and read them back"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsx)("summary",{children:"Details"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"produces the same JSON as is found in golden/ReasonablySized (ClientInput SimpleTx).json"}),"\n"]}),"\n"]})]})}function o(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>c});var i=s(96540);const l={},d=i.createContext(l);function r(e){const n=i.useContext(d);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),i.createElement(d.Provider,{value:n},e.children)}}}]);