"use strict";(self.webpackChunkhydra_head_protocol_docs=self.webpackChunkhydra_head_protocol_docs||[]).push([[7882],{40789:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"tests/hydra-cluster/hspec-results","title":"Test results for hydra-cluster","description":"Test.OfflineChain","source":"@site/benchmarks/tests/hydra-cluster/hspec-results.md","sourceDirName":"tests/hydra-cluster","slug":"/tests/hydra-cluster/hspec-results","permalink":"/head-protocol/unstable/benchmarks/tests/hydra-cluster/hspec-results","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"Ledger micro-benchmarks","permalink":"/head-protocol/unstable/benchmarks/ledger"},"next":{"title":"Test results for hydra-node","permalink":"/head-protocol/unstable/benchmarks/tests/hydra-node/hspec-results"}}');var t=i(74848),s=i(28453);const l={},d="Test results for hydra-cluster",a={},o=[{value:"Test.OfflineChain",id:"testofflinechain",level:2},{value:"Test.Hydra.Cluster.Mithril",id:"testhydraclustermithril",level:2},{value:"downloadLatestSnapshotTo",id:"downloadlatestsnapshotto",level:3},{value:"Test.Hydra.Cluster.HydraClient",id:"testhydraclusterhydraclient",level:2},{value:"HydraClient on Cardano devnet",id:"hydraclient-on-cardano-devnet",level:3},{value:"hydra-client",id:"hydra-client",level:4},{value:"Test.Hydra.Cluster.Faucet",id:"testhydraclusterfaucet",level:2},{value:"returnFundsToFaucet",id:"returnfundstofaucet",level:3},{value:"seedFromFaucet",id:"seedfromfaucet",level:3},{value:"Test.Hydra.Cluster.CardanoCli",id:"testhydraclustercardanocli",level:2},{value:"cardano-cli",id:"cardano-cli",level:3},{value:"Test.Generator",id:"testgenerator",level:2},{value:"JSON encoding of Dataset",id:"json-encoding-of-dataset",level:3},{value:"Test.EndToEnd",id:"testendtoend",level:2},{value:"End-to-end on Cardano devnet",id:"end-to-end-on-cardano-devnet",level:3},{value:"hydra-node executable",id:"hydra-node-executable",level:4},{value:"Monitoring",id:"monitoring",level:4},{value:"two hydra heads scenario",id:"two-hydra-heads-scenario",level:4},{value:"restarting nodes",id:"restarting-nodes",level:4},{value:"three hydra nodes scenario",id:"three-hydra-nodes-scenario",level:4},{value:"single party hydra head",id:"single-party-hydra-head",level:4},{value:"Test.DirectChain",id:"testdirectchain",level:2},{value:"Test.ChainObserver",id:"testchainobserver",level:2},{value:"Test.CardanoNode",id:"testcardanonode",level:2},{value:"findRunningCardanoNode",id:"findrunningcardanonode",level:3},{value:"Test.CardanoClient",id:"testcardanoclient",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components},{Details:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"test-results-for-hydra-cluster",children:"Test results for hydra-cluster"})}),"\n",(0,t.jsx)(n.h2,{id:"testofflinechain",children:"Test.OfflineChain"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"does derive head id from node id"}),"\n",(0,t.jsx)(n.li,{children:"does start on slot 0 with no genesis"}),"\n",(0,t.jsx)(n.li,{children:"does not start on slot 0 with real genesis file"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"testhydraclustermithril",children:"Test.Hydra.Cluster.Mithril"}),"\n",(0,t.jsx)(n.h3,{id:"downloadlatestsnapshotto",children:"downloadLatestSnapshotTo"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"invokes mithril-client correctly (Preview)"}),"\n",(0,t.jsx)(n.li,{children:"invokes mithril-client correctly (Preproduction)"}),"\n",(0,t.jsx)(n.li,{children:"invokes mithril-client correctly (Mainnet)"}),"\n",(0,t.jsx)(n.li,{children:"invokes mithril-client correctly (Sanchonet)"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"testhydraclusterhydraclient",children:"Test.Hydra.Cluster.HydraClient"}),"\n",(0,t.jsx)(n.h3,{id:"hydraclient-on-cardano-devnet",children:"HydraClient on Cardano devnet"}),"\n",(0,t.jsx)(n.h4,{id:"hydra-client",children:"hydra-client"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"should filter TxValid by provided address"}),"\n",(0,t.jsx)(n.li,{children:"should filter out TxValid when given a random address"}),"\n",(0,t.jsx)(n.li,{children:"should filter out TxValid when given a wrong address"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"testhydraclusterfaucet",children:"Test.Hydra.Cluster.Faucet"}),"\n",(0,t.jsx)(n.h3,{id:"returnfundstofaucet",children:"returnFundsToFaucet"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"does nothing if nothing to return"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"seedFromFaucet and returnFundsToFaucet should work together"}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"Details"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"+++ OK, passed 10 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"seedfromfaucet",children:"seedFromFaucet"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"should work concurrently when called multiple times with the same amount of lovelace"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"testhydraclustercardanocli",children:"Test.Hydra.Cluster.CardanoCli"}),"\n",(0,t.jsx)(n.h3,{id:"cardano-cli",children:"cardano-cli"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"cardano-cli can accept a draft commit tx in text-envelope format"}),"\n",(0,t.jsx)(n.li,{children:"has expected cardano-cli version available"}),"\n",(0,t.jsx)(n.li,{children:"query protocol-parameters is compatible with our FromJSON instance"}),"\n",(0,t.jsx)(n.li,{children:"query protocol-parameters matches our schema"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"testgenerator",children:"Test.Generator"}),"\n",(0,t.jsx)(n.h3,{id:"json-encoding-of-dataset",children:"JSON encoding of Dataset"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"allows to encode values with aeson and read them back"}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"Details"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"generates a Dataset that keeps UTXO constant"}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"Details"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"+++ OK, passed 100 tests.\n"})})]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"testendtoend",children:"Test.EndToEnd"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"End-to-end offline mode"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"end-to-end-on-cardano-devnet",children:"End-to-end on Cardano devnet"}),"\n",(0,t.jsx)(n.h4,{id:"hydra-node-executable",children:"hydra-node executable"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"logs its command line arguments"}),"\n",(0,t.jsx)(n.li,{children:"logs to a logfile"}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"monitoring",children:"Monitoring"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Node exposes Prometheus metrics on port 6001"}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"two-hydra-heads-scenario",children:"two hydra heads scenario"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"two heads on the same network do not conflict"}),"\n",(0,t.jsx)(n.li,{children:"alice inits a Head with incorrect keys preventing bob from observing InitTx"}),"\n",(0,t.jsx)(n.li,{children:"bob cannot abort alice's head"}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"restarting-nodes",children:"restarting nodes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"can abort head after restart"}),"\n",(0,t.jsx)(n.li,{children:"can observe a commit tx after a restart, even when a tx happened while down"}),"\n",(0,t.jsx)(n.li,{children:"prevent resuming a head after reconfiguring a peer"}),"\n",(0,t.jsx)(n.li,{children:"can start chain from the past and replay on-chain events"}),"\n",(0,t.jsx)(n.li,{children:"close of an initial snapshot from re-initialized node is contested"}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"three-hydra-nodes-scenario",children:"three hydra nodes scenario"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"does not error when all nodes open the head concurrently"}),"\n",(0,t.jsx)(n.li,{children:"inits a Head, processes a single Cardano transaction and closes it again"}),"\n",(0,t.jsx)(n.li,{children:"inits a Head and closes it immediately"}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"single-party-hydra-head",children:"single party hydra head"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"full head life-cycle"}),"\n",(0,t.jsx)(n.li,{children:"can close with long deadline"}),"\n",(0,t.jsx)(n.li,{children:"can submit a timed tx"}),"\n",(0,t.jsx)(n.li,{children:"commits from external with utxo"}),"\n",(0,t.jsx)(n.li,{children:"can submit a signed user transaction"}),"\n",(0,t.jsx)(n.li,{children:"commits from external with tx blueprint"}),"\n",(0,t.jsx)(n.li,{children:"can decommit utxo"}),"\n",(0,t.jsx)(n.li,{children:"can incrementally commit"}),"\n",(0,t.jsx)(n.li,{children:"can recover deposit"}),"\n",(0,t.jsx)(n.li,{children:"can see pending deposits"}),"\n",(0,t.jsx)(n.li,{children:"incrementally commit script using blueprint tx"}),"\n",(0,t.jsx)(n.li,{children:"persistence can load with empty commit"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"testdirectchain",children:"Test.DirectChain"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"can init and abort a head given nothing has been committed"}),"\n",(0,t.jsx)(n.li,{children:"can init and abort a 2-parties head after one party has committed"}),"\n",(0,t.jsx)(n.li,{children:"cannot abort a non-participating head"}),"\n",(0,t.jsx)(n.li,{children:"can commit using external wallet"}),"\n",(0,t.jsx)(n.li,{children:"can commit using internal hydra-node wallet"}),"\n",(0,t.jsx)(n.li,{children:"can commit empty UTxO"}),"\n",(0,t.jsx)(n.li,{children:"can commit with multiple required signatures"}),"\n",(0,t.jsx)(n.li,{children:"can open, close & fanout a Head"}),"\n",(0,t.jsx)(n.li,{children:"can restart head to point in the past and replay on-chain events"}),"\n",(0,t.jsx)(n.li,{children:"cannot restart head to an unknown point"}),"\n",(0,t.jsx)(n.li,{children:"can publish and query reference scripts in a timely manner"}),"\n",(0,t.jsx)(n.li,{children:"can only contest once"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"testchainobserver",children:"Test.ChainObserver"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"can observe hydra transactions created by hydra-nodes"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"testcardanonode",children:"Test.CardanoNode"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"has expected cardano-node version available"}),"\n",(0,t.jsx)(n.li,{children:"withCardanoNodeDevnet does start a block-producing devnet within 5 seconds"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"findrunningcardanonode",children:"findRunningCardanoNode"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"returns Nothing on non-matching network"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"returns Just running node on matching network"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"withCardanoNodeOnKnownNetwork starts synchronizing within 10 seconds (Preview)"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"withCardanoNodeOnKnownNetwork starts synchronizing within 10 seconds (Preproduction)"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"withCardanoNodeOnKnownNetwork starts synchronizing within 10 seconds (Mainnet)"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"withCardanoNodeOnKnownNetwork starts synchronizing within 10 seconds (Sanchonet)"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"testcardanoclient",children:"Test.CardanoClient"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"queryGenesisParameters works as expected"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>d});var r=i(96540);const t={},s=r.createContext(t);function l(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);