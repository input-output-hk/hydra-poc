"use strict";(self.webpackChunkhydra_head_protocol_docs=self.webpackChunkhydra_head_protocol_docs||[]).push([[2876],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>u});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),d=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},h="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),h=d(a),m=r,u=h["".concat(l,".").concat(m)]||h[m]||c[m]||i;return a?n.createElement(u,s(s({ref:t},p),{},{components:a})):n.createElement(u,s({ref:t},p))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,s=new Array(i);s[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[h]="string"==typeof e?e:r,s[1]=o;for(var d=2;d<i;d++)s[d]=a[d];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},72641:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var n=a(87462),r=(a(67294),a(3905));const i={sidebar_label:"Star-shaped network",sidebar_position:4},s="Star-shaped head network",o={unversionedId:"star-shaped/index",id:"star-shaped/index",title:"Star-shaped head network",description:"This document is a work in progress.",source:"@site/topologies/star-shaped/index.md",sourceDirName:"star-shaped",slug:"/star-shaped/",permalink:"/head-protocol/topologies/star-shaped/",draft:!1,editUrl:"https://github.com/cardano-scaling/hydra/tree/master/docs/topologies/star-shaped/index.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_label:"Star-shaped network",sidebar_position:4},sidebar:"defaultSidebar",previous:{title:"Delegated head",permalink:"/head-protocol/topologies/delegated-head/"}},l={},d=[{value:"Summary",id:"summary",level:2},{value:"On-chain transactions",id:"on-chain-transactions",level:2},{value:"Off-chain transactions",id:"off-chain-transactions",level:2}],p={toc:d},h="wrapper";function c(e){let{components:t,...i}=e;return(0,r.kt)(h,(0,n.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"star-shaped-head-network"},"Star-shaped head network"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"\ud83d\udee0\ufe0f This document is a work in progress.")),(0,r.kt)("p",null,"This document details the behavior of the so-called ",(0,r.kt)("em",{parentName:"p"},"star-shaped Hydra network"),"."),(0,r.kt)("h2",{id:"summary"},"Summary"),(0,r.kt)("p",null,"A ",(0,r.kt)("em",{parentName:"p"},"star-shaped Hydra network"),", or more precisely a star-shaped heads network, comprises:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A central ",(0,r.kt)("em",{parentName:"li"},"server")," node that provides 'head-as-a-service' with low expected downtime, likely operated by a company or organization equipped to host this service."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Client")," nodes, which may be DApp instances or mobile/personal wallets. These nodes might not always be online and can come and go.")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Star-shaped Heads Network",src:a(79003).Z,width:"4862",height:"3290"})),(0,r.kt)("p",null,"Client nodes aim to interact with each other efficiently and at low cost using a layer 2 solution, with all the Hydra safety guarantees, but without the operational burden of maintaining an always-online 'full' Hydra node. This might involve using an embedded version of the node or a lightweight variant. Potentially, hundreds or even thousands of such client nodes exist, though they are not always active simultaneously."),(0,r.kt)("p",null,"Client nodes establish pairwise heads (eg, ",(0,r.kt)("em",{parentName:"p"},"channels"),") with the server. This setup is simpler than with a normal multiparty head because the server has a well-known identity, and the client can always provide the needed parameters (keys, IP) to the server when setting up the head using a specific service, the details of which are outside the scope of this document."),(0,r.kt)("p",null,"Transactions that a client node posts in 'its' head should be ",(0,r.kt)("em",{parentName:"p"},"reflected")," by the server into the other heads it maintains."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Questions"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Is it expected for the pairwise heads to have varying 'durations'? For example, a client comes, opens a head, conducts some activities, and closes it, while other heads maintained by the same server stay ",(0,r.kt)("em",{parentName:"li"},"open"),"."),(0,r.kt)("li",{parentName:"ul"},"How does the server provide guarantees preserving Hydra heads' basic ",(0,r.kt)("em",{parentName:"li"},"safety property")," for each pairwise head?",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The diagram suggests using ",(0,r.kt)("em",{parentName:"li"},"Hash Time-Lock Contracts")," (",(0,r.kt)("a",{parentName:"li",href:"https://docs.lightning.engineering/the-lightning-network/multihop-payments/hash-time-lock-contract-htlc"},"HTLC"),") to ensure the client can always retrieve its UTXOs if the server does not properly route the transaction to its destination."))),(0,r.kt)("li",{parentName:"ul"},"What kinds of transactions should be supported? HTLCs are suitable for payment-style transactions but not necessarily for DApps, unless adapted.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"It seems to be assumed implicitly that the server can 'route' a transaction from one head to the appropriate head, implying it 'understands' the addresses of UTXOs posted in heads.")))),(0,r.kt)("h2",{id:"on-chain-transactions"},"On-chain transactions"),(0,r.kt)("p",null,"The diagram below represents the lifecycle of two pairwise heads between ",(0,r.kt)("strong",{parentName:"p"},"Alice"),", ",(0,r.kt)("strong",{parentName:"p"},"Bob"),", and the ",(0,r.kt)("strong",{parentName:"p"},"server"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Star-shaped Network On-Chain",src:a(7849).Z,width:"1897",height:"413"})),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Remarks"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"It is assumed that transactions occurring in one head are reflected in the other, resulting in a consistently final UTXO ",(0,r.kt)("inlineCode",{parentName:"li"},"c"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Both heads must start with the ",(0,r.kt)("em",{parentName:"li"},"same")," initial UTXO set, which is challenging to implement (highlighted in red in the diagram)"),(0,r.kt)("li",{parentName:"ul"},"If the final UTXO set is consistent, then it can be fanned out by any party. However, this could result in one ",(0,r.kt)("inlineCode",{parentName:"li"},"\u03bd_head")," staying dangling and becoming unspendable as it would recreate an already existing UTXO (grayed out transaction in the diagram)."))),(0,r.kt)("li",{parentName:"ul"},"The lifecycles of the heads are interconnected: when one is closed, the other must also be closed, as ensured by the server.")),(0,r.kt)("h2",{id:"off-chain-transactions"},"Off-chain transactions"),(0,r.kt)("p",null,"The following diagram depicts the sequence of messages exchanged between various ",(0,r.kt)("inlineCode",{parentName:"p"},"node"),"s to ensure transaction propagation."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Star-shaped Network Off-Chain Protocol",src:a(16468).Z,width:"520",height:"757"})),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Remarks"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The server is represented by two nodes, ",(0,r.kt)("inlineCode",{parentName:"li"},"M(A)")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"M(B)")),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"newTx")," issued by ",(0,r.kt)("inlineCode",{parentName:"li"},"Alice")," through her node will be propagated by the server to ",(0,r.kt)("inlineCode",{parentName:"li"},"Bob"),"'s node as ",(0,r.kt)("inlineCode",{parentName:"li"},"newTx")," as well"),(0,r.kt)("li",{parentName:"ul"},"This diagram does not account for any additional transactions the server might need to post to provide guarantees to either Alice or Bob (for example, an in-head HTLC transaction)"),(0,r.kt)("li",{parentName:"ul"},"To ensure consistency of snapshots, the server is presumed to always act as the leader, ie, the one triggering the emission of a snapshot.")))}c.isMDXComponent=!0},16468:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/off-chain-protocol-e3962146cdd4905688da7c366154f834.png"},79003:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/star-shaped-general-532cfafec07585ab262bbbee9acee8eb.jpg"},7849:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/star-shaped-txs-bef2a52039a88dc3cbd49358322377bd.png"}}]);