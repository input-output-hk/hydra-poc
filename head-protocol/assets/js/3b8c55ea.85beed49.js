"use strict";(self.webpackChunkhydra_head_protocol_docs=self.webpackChunkhydra_head_protocol_docs||[]).push([[3217],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>h});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(r),m=a,h=u["".concat(c,".").concat(m)]||u[m]||p[m]||o;return r?n.createElement(h,i(i({ref:t},d),{},{components:r})):n.createElement(h,i({ref:t},d))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},89803:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=r(87462),a=(r(67294),r(3905));const o={sidebar_position:2},i="Installation",l={unversionedId:"installation",id:"installation",title:"Installation",description:"Selecting the right installation method for the hydra-node depends on your requirements and technical preferences. Below are the primary methods to get started quickly and efficiently.",source:"@site/docs/installation.md",sourceDirName:".",slug:"/installation",permalink:"/head-protocol/docs/installation",draft:!1,editUrl:"https://github.com/cardano-scaling/hydra/tree/master/docs/docs/installation.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"userDocumentation",previous:{title:"Open a head on testnet",permalink:"/head-protocol/docs/tutorial/"},next:{title:"Configuration",permalink:"/head-protocol/docs/configuration"}},c={},s=[{value:"Docker",id:"docker",level:3},{value:"Prebuilt binaries",id:"prebuilt-binaries",level:3},{value:"Build from source",id:"build-from-source",level:3}],d={toc:s},u="wrapper";function p(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"installation"},"Installation"),(0,a.kt)("p",null,"Selecting the right installation method for the ",(0,a.kt)("inlineCode",{parentName:"p"},"hydra-node")," depends on your requirements and technical preferences. Below are the primary methods to get started quickly and efficiently."),(0,a.kt)("h3",{id:"docker"},"Docker"),(0,a.kt)("p",null,"The quickest way to install and run a ",(0,a.kt)("inlineCode",{parentName:"p"},"hydra-node")," is by using Docker images:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"docker pull ghcr.io/cardano-scaling/hydra-node\ndocker run --rm ghcr.io/cardano-scaling/hydra-node --help\n")),(0,a.kt)("h3",{id:"prebuilt-binaries"},"Prebuilt binaries"),(0,a.kt)("p",null,"We provide statically linked binaries of ",(0,a.kt)("inlineCode",{parentName:"p"},"hydra-node")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"hydra-tui")," for x86_64 Linux and ARM64 MacOS platforms. These binaries are available as attachments in our ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/cardano-scaling/hydra/releases"},"github releases"),"."),(0,a.kt)("h3",{id:"build-from-source"},"Build from source"),(0,a.kt)("p",null,"While using Docker is the recommended way to ",(0,a.kt)("em",{parentName:"p"},"use")," Hydra, you can also build the ",(0,a.kt)("inlineCode",{parentName:"p"},"hydra-node")," from source. We recommend using ",(0,a.kt)("a",{parentName:"p",href:"https://nixos.org/download.html"},"Nix")," for this and you can find instructions in our ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/hydra/blob/master/CONTRIBUTING.md"},"contributing guidelines"),"."))}p.isMDXComponent=!0}}]);