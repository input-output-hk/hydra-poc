"use strict";(self.webpackChunkhydra_head_protocol_docs=self.webpackChunkhydra_head_protocol_docs||[]).push([[9699],{3905:(t,e,a)=>{a.d(e,{Zo:()=>p,kt:()=>c});var n=a(67294);function l(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function r(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?r(Object(a),!0).forEach((function(e){l(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function s(t,e){if(null==t)return{};var a,n,l=function(t,e){if(null==t)return{};var a,n,l={},r=Object.keys(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||(l[a]=t[a]);return l}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(l[a]=t[a])}return l}var u=n.createContext({}),o=function(t){var e=n.useContext(u),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},p=function(t){var e=o(t.components);return n.createElement(u.Provider,{value:e},t.children)},d="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},k=n.forwardRef((function(t,e){var a=t.components,l=t.mdxType,r=t.originalType,u=t.parentName,p=s(t,["components","mdxType","originalType","parentName"]),d=o(a),k=l,c=d["".concat(u,".").concat(k)]||d[k]||m[k]||r;return a?n.createElement(c,i(i({ref:e},p),{},{components:a})):n.createElement(c,i({ref:e},p))}));function c(t,e){var a=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var r=a.length,i=new Array(r);i[0]=k;var s={};for(var u in e)hasOwnProperty.call(e,u)&&(s[u]=e[u]);s.originalType=t,s[d]="string"==typeof t?t:l,i[1]=s;for(var o=2;o<r;o++)i[o]=a[o];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},63435:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>u,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>o});var n=a(87462),l=(a(67294),a(3905));const r={},i="Test results for hydra-tx",s={unversionedId:"tests/hydra-tx/hspec-results",id:"tests/hydra-tx/hspec-results",title:"Test results for hydra-tx",description:"Hydra.Tx.IsTx",source:"@site/benchmarks/tests/hydra-tx/hspec-results.md",sourceDirName:"tests/hydra-tx",slug:"/tests/hydra-tx/hspec-results",permalink:"/head-protocol/benchmarks/tests/hydra-tx/hspec-results",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Test results for hydra-plutus",permalink:"/head-protocol/benchmarks/tests/hydra-plutus/hspec-results"},next:{title:"Test results for plutus-cbor",permalink:"/head-protocol/benchmarks/tests/plutus-cbor/hspec-results"}},u={},o=[{value:"Hydra.Tx.IsTx",id:"hydratxistx",level:2},{value:"Tx",id:"tx",level:3},{value:"JSON encoding of (ReasonablySized (Tx ConwayEra))",id:"json-encoding-of-reasonablysized-tx-conwayera",level:4},{value:"UTxO",id:"utxo",level:3},{value:"JSON encoding of (UTxO&#39; (TxOut CtxUTxO ConwayEra))",id:"json-encoding-of-utxo-txout-ctxutxo-conwayera",level:4},{value:"Hydra.Tx.Contract.Contract",id:"hydratxcontractcontract",level:2},{value:"Fanout",id:"fanout",level:3},{value:"ContestCurrent",id:"contestcurrent",level:3},{value:"CloseUsed",id:"closeused",level:3},{value:"CloseUnused",id:"closeunused",level:3},{value:"CloseInitial",id:"closeinitial",level:3},{value:"Recover",id:"recover",level:3},{value:"Deposit",id:"deposit",level:3},{value:"Decrement",id:"decrement",level:3},{value:"CollectCom",id:"collectcom",level:3},{value:"Commit",id:"commit",level:3},{value:"Abort",id:"abort",level:3},{value:"Init",id:"init",level:3},{value:"Serializing commits",id:"serializing-commits",level:3},{value:"TxOut hashing",id:"txout-hashing",level:3},{value:"Signature validator",id:"signature-validator",level:3}],p={toc:o},d="wrapper";function m(t){let{components:e,...a}=t;return(0,l.kt)(d,(0,n.Z)({},p,a,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"test-results-for-hydra-tx"},"Test results for hydra-tx"),(0,l.kt)("h2",{id:"hydratxistx"},"Hydra.Tx.IsTx"),(0,l.kt)("h3",{id:"tx"},"Tx"),(0,l.kt)("h4",{id:"json-encoding-of-reasonablysized-tx-conwayera"},"JSON encoding of (ReasonablySized (Tx ConwayEra))"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"allows to encode values with aeson and read them back"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 100 tests.\n")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"produces the same JSON as is found in golden/ReasonablySized (Tx ConwayEra).json")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Same TxId before/after JSON encoding"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 100 tests.\n")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Same TxId as TxBody after JSON decoding"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 100 tests.\n")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Roundtrip to and from Ledger"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 100 tests.\n")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Roundtrip CBOR encoding"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 100 tests.\n")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"JSON decode Babbage era transactions"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 100 tests.\n")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"CBOR decode Babbage era transactions"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 100 tests.\n"))))),(0,l.kt)("h3",{id:"utxo"},"UTxO"),(0,l.kt)("h4",{id:"json-encoding-of-utxo-txout-ctxutxo-conwayera"},"JSON encoding of (UTxO' (TxOut CtxUTxO ConwayEra))"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"allows to encode values with aeson and read them back"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 100 tests.\n")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"produces the same JSON as is found in golden/UTxO' (TxOut CtxUTxO ConwayEra).json")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Roundtrip to and from Api"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 100 tests.\n"))))),(0,l.kt)("h2",{id:"hydratxcontractcontract"},"Hydra.Tx.Contract.Contract"),(0,l.kt)("h3",{id:"fanout"},"Fanout"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"is healthy"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 1 test.\n")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"does not survive random adversarial mutations"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 200 tests.\n\nFanoutMutation (200 in total):\n27.0% MutateValidityBeforeDeadline\n19.0% MutateAddUnexpectedOutput\n19.0% MutateThreadTokenQuantity\n18.0% MutateDecommitOutputValue\n17.0% MutateFanoutOutputValue\n"))))),(0,l.kt)("h3",{id:"contestcurrent"},"ContestCurrent"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"is healthy"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 1 test.\n")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"does not survive random adversarial mutations"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 400 tests.\n\nContestMutation (400 in total):\n10.8% MutateContestUTxOHash\n 7.0% MutateSignatureButNotSnapshotNumber\n 6.2% MutateTokenMintingOrBurning\n 6.0% MutateValueInOutput\n 6.0% SnapshotNotSignedByAllParties\n 5.0% MutateHeadIdInOutput\n 5.0% NotContinueContract\n 4.8% MutateInputContesters\n 4.8% MutateNoRequiredSigner\n 4.8% MutateToNonNewerSnapshot\n 4.5% MutateRequiredSigner\n 4.2% MutateOutputContestationPeriod\n 4.2% NotUpdateDeadlineAlthoughItShould\n 4.0% ContestFromDifferentHead\n 4.0% MutateContesters\n 3.5% MutatePartiesInOutput\n 3.5% MutateSnapshotNumberButNotSignature\n 3.5% MutateSnapshotVersion\n 3.2% MutateMultipleRequiredSigner\n 2.8% PushDeadlineAlthoughItShouldNot\n 2.2% MutateValidityPastDeadline\n"))))),(0,l.kt)("h3",{id:"closeused"},"CloseUsed"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"is healthy"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 1 test.\n")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"does not survive random adversarial mutations"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 400 tests.\n\nCloseMutation (400 in total):\n 7.0% MutateSignatureButNotSnapshotNumber\n 6.2% MutateInfiniteLowerBound\n 6.0% MutateNoRequiredSigner\n 5.8% MutateCloseUTxOHash\n 5.5% CloseFromDifferentHead\n 5.0% MutateCloseSignatures\n 4.8% MutateInfiniteUpperBound\n 4.8% NotContinueContract\n 4.8% SnapshotNotSignedByAllParties\n 4.5% MutateMultipleRequiredSigner\n 4.2% MutatePartiesInOutput\n 4.0% MutateCloseType\n 4.0% MutateContestationPeriod\n 4.0% MutateHeadIdInOutput\n 4.0% MutateTokenMintingOrBurning\n 4.0% MutateValueInOutput\n 3.5% MutateSnapshotVersion\n 3.5% MutateValidityInterval\n 3.2% MutateCloseUTxOToDecommitHash\n 3.2% MutateSnapshotNumberButNotSignature\n 3.0% MutateRequiredSigner\n 2.8% MutateContesters\n 2.2% MutateContestationDeadline\n"))))),(0,l.kt)("h3",{id:"closeunused"},"CloseUnused"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"is healthy"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 1 test.\n")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"does not survive random adversarial mutations"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 400 tests.\n\nCloseMutation (400 in total):\n 7.2% MutateSignatureButNotSnapshotNumber\n 6.5% MutateCloseUTxOHash\n 6.2% MutateInfiniteLowerBound\n 6.2% MutateNoRequiredSigner\n 6.0% CloseFromDifferentHead\n 5.5% SnapshotNotSignedByAllParties\n 5.2% NotContinueContract\n 5.0% MutateHeadIdInOutput\n 5.0% MutateMultipleRequiredSigner\n 4.8% MutateInfiniteUpperBound\n 4.8% MutatePartiesInOutput\n 4.5% MutateContestationPeriod\n 4.5% MutateTokenMintingOrBurning\n 4.5% MutateValueInOutput\n 4.2% MutateValidityInterval\n 3.8% MutateCloseUTxOToDecommitHash\n 3.8% MutateSnapshotNumberButNotSignature\n 3.8% MutateSnapshotVersion\n 3.5% MutateRequiredSigner\n 2.8% MutateContesters\n 2.2% MutateContestationDeadline\n"))))),(0,l.kt)("h3",{id:"closeinitial"},"CloseInitial"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"is healthy"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 1 test.\n")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"does not survive random adversarial mutations"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 400 tests.\n\nCloseInitialMutation (400 in total):\n100.0% MutateCloseContestationDeadline'\n"))))),(0,l.kt)("h3",{id:"recover"},"Recover"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"is healthy"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 1 test.\n")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"does not survive random adversarial mutations"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 200 tests.\n\nRecoverMutation (200 in total):\n37.5% MutateDepositDeadline\n32.0% RemoveTxValidityLowerBound\n30.5% MutateRecoverOutput\n"))))),(0,l.kt)("h3",{id:"deposit"},"Deposit"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"is healthy"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 1 test.\n"))))),(0,l.kt)("h3",{id:"decrement"},"Decrement"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"is healthy"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 1 test.\n")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"does not survive random adversarial mutations"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 200 tests.\n\nDecrementMutation (200 in total):\n18.5% ChangePartiesInOuput\n13.5% ProduceInvalidSignatures\n12.5% ChangeHeadValue\n12.0% UseDifferentSnapshotVersion\n11.5% ChangeDecrementedValue\n11.0% AlterRequiredSigner\n11.0% DropDecommitOutput\n10.0% ExtractSomeValue\n"))))),(0,l.kt)("h3",{id:"collectcom"},"CollectCom"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"is healthy"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 1 test.\n")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"does not survive random adversarial mutations"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 200 tests.\n\nCollectComMutation (200 in total):\n17.0% MutateTokenMintingOrBurning\n11.5% MutateHeadId\n10.5% MutateNumberOfParties\n10.5% MutateOpenVersion\n10.0% ExtractSomeValue\n10.0% NotContinueContract\n 9.0% MutateRequiredSigner\n 8.0% MutateCommitToInitial\n 7.0% RemoveSTFromOutput\n 6.5% MutateOpenUTxOHash\n"))))),(0,l.kt)("h3",{id:"commit"},"Commit"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"is healthy"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 1 test.\n")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"does not survive random adversarial mutations"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 200 tests.\n\nCommitMutation (200 in total):\n18.5% NonContinuousHeadId\n13.5% MutateCommittedValue\n12.5% MutateRequiredSigner\n12.0% MutateCommitOutputValue\n11.5% RecordAllCommittedUTxO\n11.0% MutateCommittedAddress\n11.0% UsePTFromDifferentHead\n10.0% MutateTokenMintingOrBurning\n"))))),(0,l.kt)("h3",{id:"abort"},"Abort"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"is healthy"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 100 tests.\n")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"does not survive random adversarial mutations"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 200 tests.\n\nAbortMutation (200 in total):\n13.0% ReorderCommitOutputs\n 9.5% ExtractValue\n 9.5% MutateRequiredSigner\n 8.5% MutateParties\n 7.5% DoNotBurnSTInitial\n 7.5% DropCollectedInput\n 7.5% MutateThreadTokenQuantity\n 7.0% BurnOneTokenMore\n 6.5% MutateUseDifferentHeadToAbort\n 6.5% UseInputFromOtherHead\n 6.0% DoNotBurnST\n 5.5% DropOneCommitOutput\n 5.5% MintOnAbort\n"))))),(0,l.kt)("h3",{id:"init"},"Init"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"is healthy"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 1 test.\n")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"does not survive random adversarial mutations"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 200 tests.\n\nInitMutation (200 in total):\n18.5% MintTooManyTokens\n13.5% MutateInitialOutputValue\n12.5% MutateHeadIdInDatum\n12.0% MutateAddAnotherPT\n11.5% MutateDropSeedInput\n11.0% MutateDropInitialOutput\n11.0% MutateHeadIdInInitialDatum\n10.0% MutateSeedInDatum\n"))))),(0,l.kt)("h3",{id:"serializing-commits"},"Serializing commits"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"deserializeCommit . serializeCommit === id"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 100 tests.\n"))))),(0,l.kt)("h3",{id:"txout-hashing"},"TxOut hashing"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"hashUTxO == OnChain.hashTxOuts (on sorted tx outs)"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 20 tests.\n")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"OnChain.hashPreSerializedCommits == OnChain.hashTxOuts (on sorted tx outs)"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 20 tests.\n")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"does care about ordering of TxOut"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 20 tests; 36 discarded.\n"))))),(0,l.kt)("h3",{id:"signature-validator"},"Signature validator"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"verifies snapshot multi-signature"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Details"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"+++ OK, passed 100 tests.\n"))))))}m.isMDXComponent=!0}}]);